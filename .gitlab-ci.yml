---
image: "python:3.9"

test-api:
  only:
    - merge_requests
    - branches
  interruptible: true
  services:
    - postgres
  variables:
    POSTGRES_USER: mybelts
    POSTGRES_PASSWORD: mybelts
    POSTGRES_DB: mybelts
  script:
    - pip install -r requirements.txt
    - flake8 . test-api
    - mypy . test-api
    - PGHOST=postgres coverage run ./test-api
    - coverage report
    - coverage html
    - coverage xml
  artifacts:
    expose_as: 'Coverage'
    paths:
      - "htmlcov/"
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/^TOTAL.*\s+(\d+\%)\s*$/'

deploy-dev:
  script:
    - set -eu
    - apt-get update && apt-get install --yes --no-install-recommends rsync
    - mkdir -p ~/.ssh
    - echo "${DEV_SSH_CONFIG}" >~/.ssh/config
    - echo "${DEV_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - rsync -PHav --exclude=.git --exclude=env --exclude=node_modules . "target:${DEV_DEPLOY_DIRECTORY}"
    - ssh target "cd ${DEV_DEPLOY_DIRECTORY}; bash deploy.sh"

deploy-prod:
  script:
    - set -eu
    - apt-get update && apt-get install --yes --no-install-recommends rsync
    - mkdir -p ~/.ssh
    - echo "${PROD_SSH_CONFIG}" >~/.ssh/config
    - echo "${PROD_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - rsync -PHav --exclude=.git --exclude=env --exclude=node_modules . "target:${PROD_DEPLOY_DIRECTORY}"
    - ssh target "cd ${PROD_DEPLOY_DIRECTORY}; bash deploy.sh"
  when: manual
